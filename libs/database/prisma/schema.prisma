generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  email     String    @unique
  password  String
  firstName String
  lastName  String
  products  Product[]
  cart      Cart?
}

model Product {
  id          String     @id @default(uuid())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @default(now()) @updatedAt
  publishedAt DateTime?
  published   Boolean    @default(false)
  name        String
  description String
  slug        String     @unique
  owner       User       @relation(fields: [ownerId], references: [id])
  ownerId     String
  image       String
  media       String[]
  quantity    Int        @default(1)
  price       Float
  content     String
  cartItems   CartItem[]
}

model CartItem {
  id         String    @id @default(uuid())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now()) @updatedAt
  product    Product   @relation(fields: [productId], references: [id])
  productId  String
  quantity   Int       @default(1)
  Cart       Cart      @relation(fields: [cartId], references: [id])
  cartId     String
  delivery   Delivery? @relation(fields: [deliveryId], references: [id])
  deliveryId String?
}

model Cart {
  id        String     @id @default(uuid())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) @updatedAt
  user      User?      @relation(fields: [userId], references: [id])
  userId    String?    @unique
  items     CartItem[]
}

model Delivery {
  id        String     @id @default(uuid())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) @updatedAt
  name      String
  price     Float
  CartItem  CartItem[]
}
